<?xml version="1.0" encoding="utf-8" ?>
<controls:KeyboardPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
    xmlns:mm="clr-namespace:MediaManager.Forms;assembly=MediaManager.Forms"
    xmlns:controls="clr-namespace:SrtVideoPlayer.Mobile.Controls"
    xmlns:effects="clr-namespace:SrtVideoPlayer.Mobile.Effects"
    xmlns:localization="clr-namespace:SrtVideoPlayer.Shared.Localization;assembly=SrtVideoPlayer.Shared"
    xmlns:viewmodels="clr-namespace:SrtVideoPlayer.Shared.ViewModels;assembly=SrtVideoPlayer.Shared"
    mc:Ignorable="d"
    x:Class="SrtVideoPlayer.Mobile.Pages.PlayerPage"
    x:DataType="viewmodels:PlayerViewModel">
    <controls:KeyboardPage.Resources>
        <!-- Named styles !-->
        <Style x:Key="ProgressSliderStyle" TargetType="Slider">
            <Setter Property="MaximumTrackColor"
                    Value="{OnPlatform Android={DynamicResource AndroidPageBackgroundColor},
                                       iOS={DynamicResource iOSPageBackgroundColor}}" />
            <Setter Property="MinimumTrackColor"
                    Value="{DynamicResource ProgressSliderBarColor}" />
            <Setter Property="ThumbColor"
                    Value="{DynamicResource ProgressSliderThumbColor}" />
        </Style>
        <Style x:Key="PlayerPositionSpanStyle" TargetType="Span">
            <Setter Property="TextColor"
                    Value="{OnPlatform Android={DynamicResource AndroidPageBackgroundColor},
                                       iOS={DynamicResource iOSPageBackgroundColor}}" />
        </Style>
        <Style x:Key="PlayerDurationSpanStyle" TargetType="Span">
            <Setter Property="TextColor"
                    Value="{OnPlatform Android={DynamicResource AndroidFieldBackgroundColor},
                                       iOS={DynamicResource iOSFieldBackgroundColor}}" />
        </Style>
        <Style x:Key="ToastFrameStyle" TargetType="Frame">
            <Setter Property="BackgroundColor"
                    Value="{OnPlatform Android={DynamicResource AndroidTextColor},
                                       iOS={DynamicResource iOSTextColor}}" />
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Setter Property="Padding" Value="10" />
        </Style>
        <Style x:Key="ToastContentViewStyle" TargetType="ContentView">
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="InputTransparent" Value="True" />
            <Setter Property="Margin" Value="0,5,0,15" />
            <Setter Property="Opacity" Value="0" />
            <Setter Property="VerticalOptions" Value="End" />
        </Style>
        <Style x:Key="ToastLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalOptions" Value="CenterAndExpand" />
            <Setter Property="MaxLines" Value="1" />
            <Setter Property="TextColor"
                    Value="{OnPlatform Android={DynamicResource AndroidFieldBackgroundColor},
                                       iOS={DynamicResource iOSFieldBackgroundColor}}" />
        </Style>
        <StyleSheet>
            <![CDATA[
            .subtitleLabel {
                text-align: center;
            }
            ]]>
        </StyleSheet>
    </controls:KeyboardPage.Resources>
    <controls:KeyboardPage.ToolbarItems>
        <ToolbarItem 
            Text="{x:Static localization:LocalizedStrings.History}"
            Command="{Binding ShowHistoryCommand, Mode=OneTime}"
            Priority="0">
            <ToolbarItem.Order>
                <OnPlatform x:TypeArguments="ToolbarItemOrder">
                    <On Platform="Android" Value="Primary" />
                    <On Platform="iOS" Value="Secondary" />
                </OnPlatform>
            </ToolbarItem.Order>
        </ToolbarItem>
        <ToolbarItem 
            Text="{x:Static localization:LocalizedStrings.Settings}"
            Command="{Binding NavigateToSettingsCommand, Mode=OneTime}">
            <ToolbarItem.Order>
                <OnPlatform x:TypeArguments="ToolbarItemOrder">
                    <On Platform="Android" Value="Secondary" />
                    <On Platform="iOS" Value="Primary" />
                </OnPlatform>
            </ToolbarItem.Order>
            <ToolbarItem.Priority>
                <OnPlatform x:TypeArguments="x:Int32">
                    <On Platform="Android" Value="1" />
                    <On Platform="iOS" Value="2" />
                </OnPlatform>
            </ToolbarItem.Priority>
        </ToolbarItem>
        <ToolbarItem 
            Text="{x:Static localization:LocalizedStrings.About}"
            Command="{Binding ShowAboutCommand, Mode=OneTime}">
            <ToolbarItem.Order>
                <OnPlatform x:TypeArguments="ToolbarItemOrder">
                    <On Platform="Android" Value="Secondary" />
                    <On Platform="iOS" Value="Primary" />
                </OnPlatform>
            </ToolbarItem.Order>
            <ToolbarItem.Priority>
                <OnPlatform x:TypeArguments="x:Int32">
                    <On Platform="Android" Value="2" />
                    <On Platform="iOS" Value="1" />
                </OnPlatform>
            </ToolbarItem.Priority>
        </ToolbarItem>
    </controls:KeyboardPage.ToolbarItems>
    <controls:KeyboardPage.Triggers>
        <DataTrigger
            Binding="{Binding Fullscreen}"
            TargetType="controls:KeyboardPage"
            Value="False">
            <Setter
                Property="BackgroundColor"
                Value="{OnPlatform Android={DynamicResource AndroidPageBackgroundColor},
                                   iOS={DynamicResource iOSPageBackgroundColor}}" />
        </DataTrigger>
        <DataTrigger
            Binding="{Binding Fullscreen}"
            TargetType="controls:KeyboardPage"
            Value="True">
            <Setter
                Property="BackgroundColor"
                Value="Black" />
        </DataTrigger>
    </controls:KeyboardPage.Triggers>
    <Grid>
        <Grid>
            <Grid>
                <Grid
                    x:Name="ContainerGrid"
                    ColumnDefinitions="*, 2*, *">
                    <Grid.Triggers>
                        <DataTrigger
                            Binding="{Binding Fullscreen}"
                            TargetType="Grid"
                            Value="False">
                            <Setter
                                Property="BackgroundColor"
                                Value="Transparent" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding Fullscreen}"
                            TargetType="Grid"
                            Value="True">
                            <Setter
                                Property="BackgroundColor"
                                Value="Black" />
                        </DataTrigger>
                    </Grid.Triggers>
                    <mm:VideoView
                        x:Name="Player"
                        AutoPlay="True"
                        Grid.ColumnSpan="3"
                        IsVisible="{Binding MediaLoaded}"
                        Source="{Binding Source.Location}" />
                    <Label
                        x:Name="SubtitleLabel"
                        FontSize="{Binding FontSize, Converter={StaticResource fontSizeConverter}}"
                        Grid.ColumnSpan="3"
                        HorizontalOptions="Center"
                        HorizontalTextAlignment="Center"
                        IsVisible="{Binding SubtitlesAreVisible}"
                        StyleClass="subtitleLabel"
                        Text="{Binding Subtitle.Text}"
                        TextColor="{Binding SubtitleColor, Converter={StaticResource hexColorConverter}}"
                        VerticalOptions="End">
                        <Label.Effects>
                            <effects:ShadowEffect />
                        </Label.Effects>
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding CopySubtitleToClipboardCommand}"
                                Tapped="SubtitleLabel_Tapped" />
                        </Label.GestureRecognizers>
                        <Label.TextType>
                            <OnPlatform x:TypeArguments="TextType">
                                <OnPlatform.Platforms>
                                    <On Platform="Android" Value="Html" />
                                    <On Platform="iOS" Value="Text" />
                                </OnPlatform.Platforms>
                            </OnPlatform>
                        </Label.TextType>
                    </Label>
                    <ActivityIndicator
                        Color="{DynamicResource ProgressSliderBarColor}"
                        Grid.ColumnSpan="3"
                        HeightRequest="50"
                        HorizontalOptions="Center"
                        IsRunning="{Binding Buffering}"
                        VerticalOptions="Center"
                        WidthRequest="50" />
                    <BoxView>
                        <BoxView.GestureRecognizers>
                            <PinchGestureRecognizer
                                PinchUpdated="PlayerPinchGestureRecognizer_PinchUpdated" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoForward5_SecondsCommand}"
                                Direction="Left" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoBack5_SecondsCommand}"
                                Direction="Right" />
                            <TapGestureRecognizer
                                Tapped="PlayerTapGestureRecognizer_Tapped" />
                            <TapGestureRecognizer
                                Command="{Binding GoBack10_SecondsCommand}"
                                NumberOfTapsRequired="2" />
                        </BoxView.GestureRecognizers>
                    </BoxView>
                    <BoxView
                        Grid.Column="1">
                        <BoxView.GestureRecognizers>
                            <PinchGestureRecognizer
                                PinchUpdated="PlayerPinchGestureRecognizer_PinchUpdated" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoForward5_SecondsCommand}"
                                Direction="Left" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoBack5_SecondsCommand}"
                                Direction="Right" />
                            <TapGestureRecognizer
                                Tapped="PlayerTapGestureRecognizer_Tapped" />
                            <TapGestureRecognizer
                                Command="{Binding FullscreenOnOffCommand}"
                                NumberOfTapsRequired="2" />
                        </BoxView.GestureRecognizers>
                    </BoxView>
                    <BoxView
                        Grid.Column="2">
                        <BoxView.GestureRecognizers>
                            <PinchGestureRecognizer
                                PinchUpdated="PlayerPinchGestureRecognizer_PinchUpdated" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoForward5_SecondsCommand}"
                                Direction="Left" />
                            <SwipeGestureRecognizer
                                Command="{Binding GoBack5_SecondsCommand}"
                                Direction="Right" />
                            <TapGestureRecognizer
                                Tapped="PlayerTapGestureRecognizer_Tapped" />
                            <TapGestureRecognizer
                                Command="{Binding GoForward10_SecondsCommand}"
                                NumberOfTapsRequired="2" />
                        </BoxView.GestureRecognizers>
                    </BoxView>
                </Grid>
                <Frame
                    HeightRequest="96"
                    HorizontalOptions="Center"
                    IsVisible="{Binding MediaLoaded, Converter={StaticResource negateBooleanConverter}}"
                    Style="{StaticResource ContainerFrameStyle}"
                    VerticalOptions="Center"
                    WidthRequest="96">
                    <Grid>
                        <Grid
                            HeightRequest="64"
                            HorizontalOptions="Center"
                            IsVisible="{Binding SelectingVideo}"
                            VerticalOptions="Center"
                            WidthRequest="64">
                            <ActivityIndicator
                                Color="{DynamicResource ProgressSliderBarColor}"
                                HorizontalOptions="Center"
                                IsRunning="{Binding SelectingVideo}"
                                VerticalOptions="Center" />
                        </Grid>
                        <ffimageloadingsvg:SvgCachedImage
                            HeightRequest="64"
                            HorizontalOptions="Center"
                            IsVisible="{Binding SelectingVideo, Converter={StaticResource negateBooleanConverter}}"
                            Source="{DynamicResource NotStartedImage}"
                            VerticalOptions="Center"
                            WidthRequest="64">
                            <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                                <TapGestureRecognizer
                                    Command="{Binding LoadVideoCommand}" />
                            </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                        </ffimageloadingsvg:SvgCachedImage>
                    </Grid>
                </Frame>
            </Grid>
            <Frame
                x:Name="PlaybackControls"
                HeightRequest="48"
                InputTransparent="True"
                IsVisible="{Binding MediaLoaded}"
                Opacity="0"
                Style="{StaticResource ContainerFrameStyle}"
                VerticalOptions="End">
                <StackLayout
                    Orientation="Horizontal"
                    Padding="10,0"
                    Spacing="10">
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer
                            Tapped="PlaybackControls_Tapped" />
                    </StackLayout.GestureRecognizers>
                    <ffimageloadingsvg:SvgCachedImage
                        x:Name="PlayOrPauseButton"
                        HeightRequest="36"
                        Source="{DynamicResource PauseImage}"
                        VerticalOptions="Center"
                        WidthRequest="36">
                        <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding PlayOrPauseCommand}"
                                Tapped="PlaybackControls_Tapped" />
                        </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                    </ffimageloadingsvg:SvgCachedImage>
                    <ffimageloadingsvg:SvgCachedImage
                        HeightRequest="24"
                        Source="{DynamicResource StopImage}"
                        VerticalOptions="Center"
                        WidthRequest="24">
                        <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding StopCommand}"
                                Tapped="PlaybackControls_Tapped" />
                        </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                    </ffimageloadingsvg:SvgCachedImage>
                    <Slider
                        x:Name="ProgressSlider"
                        HorizontalOptions="FillAndExpand"
                        Style="{StaticResource ProgressSliderStyle}"
                        VerticalOptions="Center" />
                    <Label
                        FontSize="14"
                        VerticalOptions="Center">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span
                                    Style="{StaticResource PlayerPositionSpanStyle}"
                                    Text="{Binding Position, Converter={StaticResource timeSpanFormatConverter}}" />
                                <Span
                                    Style="{StaticResource PlayerPositionSpanStyle}"
                                    Text=" / " />
                                <Span
                                    Style="{StaticResource PlayerDurationSpanStyle}"
                                    Text="{Binding Duration, Converter={StaticResource timeSpanFormatConverter}}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <ffimageloadingsvg:SvgCachedImage
                        HeightRequest="24"
                        IsVisible="{Binding Fullscreen, Converter={StaticResource negateBooleanConverter}}"
                        Source="{DynamicResource OpenFullscreenImage}"
                        VerticalOptions="Center"
                        WidthRequest="24">
                        <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding FullscreenOnCommand}"
                                Tapped="PlaybackControls_Tapped" />
                        </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                    </ffimageloadingsvg:SvgCachedImage>
                    <ffimageloadingsvg:SvgCachedImage
                        HeightRequest="24"
                        IsVisible="{Binding Fullscreen}"
                        Source="{DynamicResource CloseFullscreenImage}"
                        VerticalOptions="Center"
                        WidthRequest="24">
                        <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding FullscreenOffCommand}"
                                Tapped="PlaybackControls_Tapped" />
                        </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                    </ffimageloadingsvg:SvgCachedImage>
                </StackLayout>
            </Frame>
        </Grid>
        <ContentView
            x:Name="SubtitleCopiedToClipboardToast"
            Style="{StaticResource ToastContentViewStyle}">
            <Frame
                Style="{StaticResource ToastFrameStyle}">
                <Label
                    Text="{x:Static localization:LocalizedStrings.SubtitleCopiedToClipboard}"
                    Style="{StaticResource ToastLabelStyle}" />
            </Frame>
        </ContentView>
    </Grid>
</controls:KeyboardPage>